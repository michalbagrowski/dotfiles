(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
  '(mac-option-modifier (quote meta)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(setq require-final-newline t)
(setq inhibit-splash-screen t)
;;FIXME stupid whole pathx
(add-to-list 'load-path "/Users/acid/Projects/tools/magit-1.2.1/")
(require 'magit)


(add-to-list 'load-path "/Users/acid/.emacs.d/color-theme-6.6.0/")
(require 'color-theme)
(eval-after-load "color-theme"
  '(progn
     (color-theme-initialize)
     (color-theme-hober)))
(windmove-default-keybindings)
(setq windmove-wrap-around t)
(setq-default tab-width 4)
(setq-default indent-tabs-mode nil)
(add-hook 'before-save-hook 'whitespace-cleanup)



;;Aron
(defun depropertize-string (str)
  "Return a copy of STR with text properties removed."
  (let ((str (copy-sequence str)))
    (set-text-properties 0 (length str) nil str)
    str))

(defun insert-from-kill-ring ()
  (interactive)
  (insert (popup-menu* (mapcar #'depropertize-string kill-ring))))



(global-set-key (kbd "C-x C-y") 'insert-from-kill-ring)

(global-linum-mode t)
(require 'ido)
(ido-mode t)
